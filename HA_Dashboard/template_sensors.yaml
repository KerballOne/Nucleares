sensor:
  - name: DateTime
    unique_id: datetime
    state: "Day: {{ states('sensor.time_day') }} - Time: {{ states('sensor.time') }}"
  - name: Total Power Output MW
    unit_of_measurement: MW
    state: >
      {% set total = 0.0 %}
      {% if not states('sensor.generator_0_breaker') | bool %} {% set total = total + states('sensor.generator_0_kw') | float / 1000 %} {% endif %}
      {% if not states('sensor.generator_1_breaker') | bool %} {% set total = total + states('sensor.generator_1_kw') | float / 1000 %} {% endif %}
      {% if not states('sensor.generator_2_breaker') | bool %} {% set total = total + states('sensor.generator_2_kw') | float / 1000 %} {% endif %}
      {{ total | round(2) }}
  - name: Demand Delta
    unit_of_measurement: MW
    state: "{{ states('sensor.power_demand_mw') | float - (states('sensor.total_power_output_mw') | float) | round(2) }}"
  - name: Demand lowerlimit
    unit_of_measurement: MW
    state: "{{ (states('sensor.power_demand_mw') | float * 0.95) | round(2) }}"
  - name: Demand upperlimit
    unit_of_measurement: MW
    state: "{{ (states('sensor.power_demand_mw') | float * 1.05) | round(2) }}"
  - name: Loop0_FlowRatio
    unit_of_measurement: Fs/Fp
    state: >
      {{ (states('sensor.COOLANT_SEC_CIRCULATION_PUMP_0_SPEED') | int / 100 *
      states('sensor.coolant_sec_circulation_pump_0_capacity') | int) /
      (states('sensor.COOLANT_CORE_CIRCULATION_PUMP_0_SPEED') | int / 100 *
      states('sensor.coolant_core_circulation_pump_0_capacity') | int +0.1) }}
  - name: Loop1_FlowRatio
    unit_of_measurement: Fs/Fp
    state: >
      {{ (states('sensor.COOLANT_SEC_CIRCULATION_PUMP_1_SPEED') | int / 100 *
      states('sensor.coolant_sec_circulation_pump_1_capacity') | int) /
      (states('sensor.COOLANT_CORE_CIRCULATION_PUMP_1_SPEED') | int / 100 *
      states('sensor.coolant_core_circulation_pump_1_capacity') | int +0.1) }}
  - name: Loop2_FlowRatio
    state: >
      {{ (states('sensor.COOLANT_SEC_CIRCULATION_PUMP_2_SPEED') | int / 100 *
      states('sensor.coolant_sec_circulation_pump_2_capacity') | int) /
      (states('sensor.COOLANT_CORE_CIRCULATION_PUMP_2_SPEED') | int / 100 *
      states('sensor.coolant_core_circulation_pump_2_capacity') | int +0.1) }}
    unit_of_measurement: Fs/Fp

  - name: ALARMS_ACTIVE
    unique_id: alarms_active
    state: "{{ state_attr('sensor.ws','values').ALARMS_ACTIVE }}"
  - name: CHEM_BORON_DOSAGE_ACTUAL
    unique_id: chem_boron_dosage_actual
    state: "{{ state_attr('sensor.ws','values').CHEM_BORON_DOSAGE_ACTUAL }}"
  - name: CHEM_BORON_DOSAGE_ORDERED
    unique_id: chem_boron_dosage_ordered
    state: "{{ state_attr('sensor.ws','values').CHEM_BORON_DOSAGE_ORDERED }}"
  - name: CHEM_BORON_FILTER_ACTUAL
    unique_id: chem_boron_filter_actual
    state: "{{ state_attr('sensor.ws','values').CHEM_BORON_FILTER_ACTUAL }}"
  - name: CHEM_BORON_FILTER_ORDERED
    unique_id: chem_boron_filter_ordered
    state: "{{ state_attr('sensor.ws','values').CHEM_BORON_FILTER_ORDERED }}"
  - name: CHEM_BORON_PPM
    unique_id: chem_boron_ppm
    state: "{{ state_attr('sensor.ws','values').CHEM_BORON_PPM }}"
  - name: CONDENSER_CIRCULATION_PUMP_ORDERED_SPEED
    unique_id: condenser_circulation_pump_ordered_speed
    state: "{{ state_attr('sensor.ws','values').CONDENSER_CIRCULATION_PUMP_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: CONDENSER_CIRCULATION_PUMP_OVERLOAD_STATUS
    unique_id: condenser_circulation_pump_overload_status
    state: "{{ state_attr('sensor.ws','values').CONDENSER_CIRCULATION_PUMP_OVERLOAD_STATUS }}"
  - name: CONDENSER_CIRCULATION_PUMP_SPEED
    unique_id: condenser_circulation_pump_speed
    state: "{{ state_attr('sensor.ws','values').CONDENSER_CIRCULATION_PUMP_SPEED }}"
    unit_of_measurement: "%"
  - name: CONDENSER_TEMPERATURE
    unique_id: condenser_temperature
    state: "{{ state_attr('sensor.ws','values').CONDENSER_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: CONDENSER_VOLUME
    unique_id: condenser_volume
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VOLUME }}"
    unit_of_measurement: L
  - name: COOLANT_CORE_CIRCULATION_PUMP_0_CAPACITY
    unique_id: coolant_core_circulation_pump_0_capacity
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_0_CAPACITY }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_0_DRY_STATUS
    unique_id: coolant_core_circulation_pump_0_dry_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_0_DRY_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_0_ORDERED_SPEED
    unique_id: coolant_core_circulation_pump_0_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_0_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_CIRCULATION_PUMP_0_OVERLOAD_STATUS
    unique_id: coolant_core_circulation_pump_0_overload_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_0_OVERLOAD_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_0_SPEED
    unique_id: coolant_core_circulation_pump_0_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_0_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_CIRCULATION_PUMP_0_STATUS
    unique_id: coolant_core_circulation_pump_0_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_0_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_1_CAPACITY
    unique_id: coolant_core_circulation_pump_1_capacity
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_1_CAPACITY }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_1_DRY_STATUS
    unique_id: coolant_core_circulation_pump_1_dry_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_1_DRY_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_1_ORDERED_SPEED
    unique_id: coolant_core_circulation_pump_1_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_1_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_CIRCULATION_PUMP_1_OVERLOAD_STATUS
    unique_id: coolant_core_circulation_pump_1_overload_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_1_OVERLOAD_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_1_SPEED
    unique_id: coolant_core_circulation_pump_1_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_1_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_CIRCULATION_PUMP_1_STATUS
    unique_id: coolant_core_circulation_pump_1_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_1_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_2_CAPACITY
    unique_id: coolant_core_circulation_pump_2_capacity
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_2_CAPACITY }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_2_DRY_STATUS
    unique_id: coolant_core_circulation_pump_2_dry_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_2_DRY_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_2_ORDERED_SPEED
    unique_id: coolant_core_circulation_pump_2_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_2_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_CIRCULATION_PUMP_2_OVERLOAD_STATUS
    unique_id: coolant_core_circulation_pump_2_overload_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_2_OVERLOAD_STATUS }}"
  - name: COOLANT_CORE_CIRCULATION_PUMP_2_SPEED
    unique_id: coolant_core_circulation_pump_2_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_2_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_CIRCULATION_PUMP_2_STATUS
    unique_id: coolant_core_circulation_pump_2_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_CIRCULATION_PUMP_2_STATUS }}"
  - name: COOLANT_CORE_FLOW_IN
    unique_id: coolant_core_flow_in
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_FLOW_IN }}"
    unit_of_measurement: "L/min"
  - name: COOLANT_CORE_FLOW_ORDERED_SPEED
    unique_id: coolant_core_flow_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_FLOW_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_FLOW_OUT
    unique_id: coolant_core_flow_out
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_FLOW_OUT }}"
    unit_of_measurement: "L/min"
  - name: COOLANT_CORE_FLOW_REACHED_SPEED
    unique_id: coolant_core_flow_reached_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_FLOW_REACHED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_FLOW_SPEED
    unique_id: coolant_core_flow_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_FLOW_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_CORE_MAX_PRESSURE
    unique_id: coolant_core_max_pressure
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_MAX_PRESSURE }}"
    unit_of_measurement: bar
  - name: COOLANT_CORE_PRESSURE
    unique_id: coolant_core_pressure
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_PRESSURE }}"
    unit_of_measurement: bar
  - name: COOLANT_CORE_PRIMARY_LOOP_LEVEL
    unique_id: coolant_core_primary_loop_level
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_PRIMARY_LOOP_LEVEL }}"
    unit_of_measurement: L
  - name: COOLANT_CORE_QUANTITY_CIRCULATION_PUMPS_PRESENT
    unique_id: coolant_core_quantity_circulation_pumps_present
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_QUANTITY_CIRCULATION_PUMPS_PRESENT }}"
  - name: COOLANT_CORE_QUANTITY_FREIGHT_PUMPS_PRESENT
    unique_id: coolant_core_quantity_freight_pumps_present
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_QUANTITY_FREIGHT_PUMPS_PRESENT }}"
  - name: COOLANT_CORE_QUANTITY_IN_VESSEL
    unique_id: coolant_core_quantity_in_vessel
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_QUANTITY_IN_VESSEL }}"
  - name: COOLANT_CORE_STATE
    unique_id: coolant_core_state
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_STATE }}"
  - name: COOLANT_CORE_VESSEL_TEMPERATURE
    unique_id: coolant_core_vessel_temperature
    state: "{{ state_attr('sensor.ws','values').COOLANT_CORE_VESSEL_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: COOLANT_SEC_0_PRESSURE
    unique_id: coolant_sec_0_pressure
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_0_PRESSURE }}"
    unit_of_measurement: bar
  - name: COOLANT_SEC_0_TEMPERATURE
    unique_id: coolant_sec_0_temperature
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_0_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: COOLANT_SEC_0_VOLUME
    unique_id: coolant_sec_0_volume
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_0_VOLUME }}"
    unit_of_measurement: L
  - name: COOLANT_SEC_1_PRESSURE
    unique_id: coolant_sec_1_pressure
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_1_PRESSURE }}"
    unit_of_measurement: bar
  - name: COOLANT_SEC_1_TEMPERATURE
    unique_id: coolant_sec_1_temperature
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_1_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: COOLANT_SEC_1_VOLUME
    unique_id: coolant_sec_1_volume
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_1_VOLUME }}"
    unit_of_measurement: L
  - name: COOLANT_SEC_2_PRESSURE
    unique_id: coolant_sec_2_pressure
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_2_PRESSURE }}"
    unit_of_measurement: bar
  - name: COOLANT_SEC_2_TEMPERATURE
    unique_id: coolant_sec_2_temperature
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_2_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: COOLANT_SEC_2_VOLUME
    unique_id: coolant_sec_2_volume
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_2_VOLUME }}"
    unit_of_measurement: L
  - name: COOLANT_SEC_2_VOLUME
    unique_id: coolant_sec_2_volume
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_2_VOLUME }}"
    unit_of_measurement: L
  - name: COOLANT_SEC_2_LIQUID_VOLUME
    unique_id: COOLANT_SEC_2_LIQUID_VOLUME
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_2_LIQUID_VOLUME }}"
    unit_of_measurement: L
  - name: COOLANT_SEC_CIRCULATION_PUMP_0_CAPACITY
    unique_id: coolant_sec_circulation_pump_0_capacity
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_0_CAPACITY }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_0_DRY_STATUS
    unique_id: coolant_sec_circulation_pump_0_dry_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_0_DRY_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_0_ORDERED_SPEED
    unique_id: coolant_sec_circulation_pump_0_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_0_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_SEC_CIRCULATION_PUMP_0_OVERLOAD_STATUS
    unique_id: coolant_sec_circulation_pump_0_overload_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_0_OVERLOAD_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_0_SPEED
    unique_id: coolant_sec_circulation_pump_0_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_0_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_SEC_CIRCULATION_PUMP_0_STATUS
    unique_id: coolant_sec_circulation_pump_0_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_0_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_1_CAPACITY
    unique_id: coolant_sec_circulation_pump_1_capacity
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_1_CAPACITY }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_1_DRY_STATUS
    unique_id: coolant_sec_circulation_pump_1_dry_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_1_DRY_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_1_ORDERED_SPEED
    unique_id: coolant_sec_circulation_pump_1_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_1_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_SEC_CIRCULATION_PUMP_1_OVERLOAD_STATUS
    unique_id: coolant_sec_circulation_pump_1_overload_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_1_OVERLOAD_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_1_SPEED
    unique_id: coolant_sec_circulation_pump_1_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_1_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_SEC_CIRCULATION_PUMP_1_STATUS
    unique_id: coolant_sec_circulation_pump_1_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_1_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_2_CAPACITY
    unique_id: coolant_sec_circulation_pump_2_capacity
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_2_CAPACITY }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_2_DRY_STATUS
    unique_id: coolant_sec_circulation_pump_2_dry_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_2_DRY_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_2_ORDERED_SPEED
    unique_id: coolant_sec_circulation_pump_2_ordered_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_2_ORDERED_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_SEC_CIRCULATION_PUMP_2_OVERLOAD_STATUS
    unique_id: coolant_sec_circulation_pump_2_overload_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_2_OVERLOAD_STATUS }}"
  - name: COOLANT_SEC_CIRCULATION_PUMP_2_SPEED
    unique_id: coolant_sec_circulation_pump_2_speed
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_2_SPEED }}"
    unit_of_measurement: "%"
  - name: COOLANT_SEC_CIRCULATION_PUMP_2_STATUS
    unique_id: coolant_sec_circulation_pump_2_status
    state: "{{ state_attr('sensor.ws','values').COOLANT_SEC_CIRCULATION_PUMP_2_STATUS }}"
  - name: CORE_CRITICAL_MASS_REACHED
    unique_id: core_critical_mass_reached
    state: "{{ state_attr('sensor.ws','values').CORE_CRITICAL_MASS_REACHED }}"
  - name: CORE_CRITICAL_MASS_REACHED_COUNTER
    unique_id: core_critical_mass_reached_counter
    state: "{{ state_attr('sensor.ws','values').CORE_CRITICAL_MASS_REACHED_COUNTER }}"
  - name: CORE_EXTERNAL_COOLANT_RESERVOIR_VOLUME
    unique_id: core_external_coolant_reservoir_volume
    state: "{{ state_attr('sensor.ws','values').CORE_EXTERNAL_COOLANT_RESERVOIR_VOLUME }}"
    unit_of_measurement: L
  - name: CORE_FACTOR
    unique_id: core_factor
    state: "{{ state_attr('sensor.ws','values').CORE_FACTOR }}"
  - name: CORE_FACTOR_CHANGE
    unique_id: core_factor_change
    state: "{{ state_attr('sensor.ws','values').CORE_FACTOR_CHANGE }}"
  - name: CORE_HIGH_STEAM_PRESENT
    unique_id: core_high_steam_present
    state: "{{ state_attr('sensor.ws','values').CORE_HIGH_STEAM_PRESENT }}"
  - name: CORE_IMMINENT_FUSION
    unique_id: core_imminent_fusion
    state: "{{ state_attr('sensor.ws','values').CORE_IMMINENT_FUSION }}"
  - name: CORE_INTEGRITY
    unique_id: core_integrity
    state: "{{ state_attr('sensor.ws','values').CORE_INTEGRITY }}"
    unit_of_measurement: "%"
  - name: CORE_IODINE_CUMULATIVE
    unique_id: core_iodine_cumulative
    state: "{{ state_attr('sensor.ws','values').CORE_IODINE_CUMULATIVE }}"
  - name: CORE_IODINE_GENERATION
    unique_id: core_iodine_generation
    state: "{{ state_attr('sensor.ws','values').CORE_IODINE_GENERATION }}"
  - name: CORE_OPERATION_MODE
    unique_id: core_operation_mode
    state: "{{ state_attr('sensor.ws','values').CORE_OPERATION_MODE }}"
  - name: CORE_POOL_COOLANT_TANK_VOLUME
    unique_id: core_pool_coolant_tank_volume
    state: "{{ state_attr('sensor.ws','values').CORE_POOL_COOLANT_TANK_VOLUME }}"
    unit_of_measurement: L
  - name: CORE_PRESSURE
    unique_id: core_pressure
    state: "{{ state_attr('sensor.ws','values').CORE_PRESSURE }}"
    unit_of_measurement: bar
  - name: CORE_PRESSURE_MAX
    unique_id: core_pressure_max
    state: "{{ state_attr('sensor.ws','values').CORE_PRESSURE_MAX }}"
    unit_of_measurement: bar
  - name: CORE_PRESSURE_OPERATIVE
    unique_id: core_pressure_operative
    state: "{{ state_attr('sensor.ws','values').CORE_PRESSURE_OPERATIVE }}"
    unit_of_measurement: bar
  - name: CORE_PRIMARY_CIRCUIT_COOLING_TANK_VOLUME
    unique_id: core_primary_circuit_cooling_tank_volume
    state: "{{ state_attr('sensor.ws','values').CORE_PRIMARY_CIRCUIT_COOLING_TANK_VOLUME }}"
    unit_of_measurement: L
  - name: CORE_READY_FOR_START
    unique_id: core_ready_for_start
    state: "{{ state_attr('sensor.ws','values').CORE_READY_FOR_START }}"
  - name: CORE_STATE
    unique_id: core_state
    state: "{{ state_attr('sensor.ws','values').CORE_STATE }}"
  - name: CORE_STATE_CRITICALITY
    unique_id: core_state_criticality
    state: "{{ state_attr('sensor.ws','values').CORE_STATE_CRITICALITY }}"
  - name: CORE_STEAM_PRESENT
    unique_id: core_steam_present
    state: "{{ state_attr('sensor.ws','values').CORE_STEAM_PRESENT }}"
  - name: CORE_TEMP
    unique_id: core_temp
    state: "{{ state_attr('sensor.ws','values').CORE_TEMP }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: CORE_TEMP_MAX
    unique_id: core_temp_max
    state: "{{ state_attr('sensor.ws','values').CORE_TEMP_MAX }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: CORE_TEMP_MIN
    unique_id: core_temp_min
    state: "{{ state_attr('sensor.ws','values').CORE_TEMP_MIN }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: CORE_TEMP_OPERATIVE
    unique_id: core_temp_operative
    state: "{{ state_attr('sensor.ws','values').CORE_TEMP_OPERATIVE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: CORE_TEMP_RESIDUAL
    unique_id: core_temp_residual
    state: "{{ state_attr('sensor.ws','values').CORE_TEMP_RESIDUAL }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: CORE_WEAR
    unique_id: core_wear
    state: "{{ state_attr('sensor.ws','values').CORE_WEAR }}"
    unit_of_measurement: "%"
  - name: CORE_XENON_CUMULATIVE
    unique_id: core_xenon_cumulative
    state: "{{ state_attr('sensor.ws','values').CORE_XENON_CUMULATIVE }}"
  - name: CORE_XENON_GENERATION
    unique_id: core_xenon_generation
    state: "{{ state_attr('sensor.ws','values').CORE_XENON_GENERATION }}"
  - name: FREIGHT_PUMP_CONDENSER_ACTIVE
    unique_id: freight_pump_condenser_active
    state: "{{ state_attr('sensor.ws','values').FREIGHT_PUMP_CONDENSER_ACTIVE }}"
  - name: FREIGHT_PUMP_EXTERNAL_ACTIVE
    unique_id: freight_pump_external_active
    state: "{{ state_attr('sensor.ws','values').FREIGHT_PUMP_EXTERNAL_ACTIVE }}"
  - name: FREIGHT_PUMP_INTERNAL_ACTIVE
    unique_id: freight_pump_internal_active
    state: "{{ state_attr('sensor.ws','values').FREIGHT_PUMP_INTERNAL_ACTIVE }}"
  - name: FUN_IS_ENABLED
    unique_id: fun_is_enabled
    state: "{{ state_attr('sensor.ws','values').FUN_IS_ENABLED }}"
  - name: GAME_SIM_SPEED
    unique_id: game_sim_speed
    state: "{{ state_attr('sensor.ws','values').GAME_SIM_SPEED }}"
    unit_of_measurement: "x"
  - name: GAME_VERSION
    unique_id: game_version
    state: "{{ state_attr('sensor.ws','values').GAME_VERSION }}"
  - name: GENERATOR_0_A
    unique_id: generator_0_a
    state: "{{ state_attr('sensor.ws','values').GENERATOR_0_A }}"
  - name: GENERATOR_0_BREAKER
    unique_id: generator_0_breaker
    state: "{{ state_attr('sensor.ws','values').GENERATOR_0_BREAKER }}"
  - name: GENERATOR_0_HERTZ
    unique_id: generator_0_hertz
    state: "{{ state_attr('sensor.ws','values').GENERATOR_0_HERTZ }}"
    unit_of_measurement: Hz
  - name: GENERATOR_0_KW
    unique_id: generator_0_kw
    state: "{{ state_attr('sensor.ws','values').GENERATOR_0_KW }}"
    unit_of_measurement: kW
  - name: GENERATOR_0_V
    unique_id: generator_0_v
    state: "{{ state_attr('sensor.ws','values').GENERATOR_0_V }}"
  - name: GENERATOR_1_A
    unique_id: generator_1_a
    state: "{{ state_attr('sensor.ws','values').GENERATOR_1_A }}"
  - name: GENERATOR_1_BREAKER
    unique_id: generator_1_breaker
    state: "{{ state_attr('sensor.ws','values').GENERATOR_1_BREAKER }}"
  - name: GENERATOR_1_HERTZ
    unique_id: generator_1_hertz
    state: "{{ state_attr('sensor.ws','values').GENERATOR_1_HERTZ }}"
    unit_of_measurement: Hz
  - name: GENERATOR_1_KW
    unique_id: generator_1_kw
    state: "{{ state_attr('sensor.ws','values').GENERATOR_1_KW }}"
    unit_of_measurement: kW
  - name: GENERATOR_1_V
    unique_id: generator_1_v
    state: "{{ state_attr('sensor.ws','values').GENERATOR_1_V }}"
  - name: GENERATOR_2_A
    unique_id: generator_2_a
    state: "{{ state_attr('sensor.ws','values').GENERATOR_2_A }}"
  - name: GENERATOR_2_BREAKER
    unique_id: generator_2_breaker
    state: "{{ state_attr('sensor.ws','values').GENERATOR_2_BREAKER }}"
  - name: GENERATOR_2_HERTZ
    unique_id: generator_2_hertz
    state: "{{ state_attr('sensor.ws','values').GENERATOR_2_HERTZ }}"
    unit_of_measurement: Hz
  - name: GENERATOR_2_KW
    unique_id: generator_2_kw
    state: "{{ state_attr('sensor.ws','values').GENERATOR_2_KW }}"
    unit_of_measurement: kW
  - name: GENERATOR_2_V
    unique_id: generator_2_v
    state: "{{ state_attr('sensor.ws','values').GENERATOR_2_V }}"
  - name: MSCV_0_OPENING_ACTUAL
    unique_id: mscv_0_opening_actual
    state: "{{ state_attr('sensor.ws','values').MSCV_0_OPENING_ACTUAL }}"
    unit_of_measurement: "%"
  - name: MSCV_1_OPENING_ACTUAL
    unique_id: mscv_1_opening_actual
    state: "{{ state_attr('sensor.ws','values').MSCV_1_OPENING_ACTUAL }}"
    unit_of_measurement: "%"
  - name: MSCV_2_OPENING_ACTUAL
    unique_id: mscv_2_opening_actual
    state: "{{ state_attr('sensor.ws','values').MSCV_2_OPENING_ACTUAL }}"
    unit_of_measurement: "%"
  - name: POWER_DEMAND_MW
    unique_id: power_demand_mw
    state: "{{ state_attr('sensor.ws','values').POWER_DEMAND_MW }}"
    device_class: power
    unit_of_measurement: MW
  - name: POWER_MAX_THEORETICAL_FINAL_PLANT_OUTPUT_MW
    unique_id: power_max_theoretical_final_plant_output_mw
    state: "{{ state_attr('sensor.ws','values').POWER_MAX_THEORETICAL_FINAL_PLANT_OUTPUT_MW }}"
    device_class: power
    unit_of_measurement: MW
  - name: RES_DIVERT_SURPLUS_FROM_MW
    unique_id: res_divert_surplus_from_mw
    state: "{{ state_attr('sensor.ws','values').RES_DIVERT_SURPLUS_FROM_MW }}"
    unit_of_measurement: MW
  - name: RES_EFFECTIVELY_DERIVED_ENERGY_MW
    unique_id: res_effectively_derived_energy_mw
    state: "{{ state_attr('sensor.ws','values').RES_EFFECTIVELY_DERIVED_ENERGY_MW }}"
    unit_of_measurement: MW
  - name: ROD_BANK_POS_0_ACTUAL
    unique_id: rod_bank_pos_0_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_0_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_0_ORDERED
    unique_id: rod_bank_pos_0_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_0_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_1_ACTUAL
    unique_id: rod_bank_pos_1_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_1_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_1_ORDERED
    unique_id: rod_bank_pos_1_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_1_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_2_ACTUAL
    unique_id: rod_bank_pos_2_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_2_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_2_ORDERED
    unique_id: rod_bank_pos_2_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_2_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_3_ACTUAL
    unique_id: rod_bank_pos_3_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_3_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_3_ORDERED
    unique_id: rod_bank_pos_3_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_3_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_4_ACTUAL
    unique_id: rod_bank_pos_4_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_4_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_4_ORDERED
    unique_id: rod_bank_pos_4_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_4_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_5_ACTUAL
    unique_id: rod_bank_pos_5_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_5_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_5_ORDERED
    unique_id: rod_bank_pos_5_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_5_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_6_ACTUAL
    unique_id: rod_bank_pos_6_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_6_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_6_ORDERED
    unique_id: rod_bank_pos_6_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_6_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_7_ACTUAL
    unique_id: rod_bank_pos_7_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_7_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_7_ORDERED
    unique_id: rod_bank_pos_7_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_7_ORDERED }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_8_ACTUAL
    unique_id: rod_bank_pos_8_actual
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_8_ACTUAL }}"
    unit_of_measurement: "%"
  - name: ROD_BANK_POS_8_ORDERED
    unique_id: rod_bank_pos_8_ordered
    state: "{{ state_attr('sensor.ws','values').ROD_BANK_POS_8_ORDERED }}"
    unit_of_measurement: "%"
  - name: RODS_ALIGNED
    unique_id: rods_aligned
    state: "{{ state_attr('sensor.ws','values').RODS_ALIGNED }}"
  - name: RODS_DEFORMED
    unique_id: rods_deformed
    state: "{{ state_attr('sensor.ws','values').RODS_DEFORMED }}"
  - name: RODS_MAX_TEMPERATURE
    unique_id: rods_max_temperature
    state: "{{ state_attr('sensor.ws','values').RODS_MAX_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: RODS_MOVEMENT_SPEED
    unique_id: rods_movement_speed
    state: "{{ state_attr('sensor.ws','values').RODS_MOVEMENT_SPEED }}"
    unit_of_measurement: "%"
  - name: RODS_MOVEMENT_SPEED_DECREASED_HIGH_TEMPERATURE
    unique_id: rods_movement_speed_decreased_high_temperature
    state: "{{ state_attr('sensor.ws','values').RODS_MOVEMENT_SPEED_DECREASED_HIGH_TEMPERATURE }}"
    device_class: temperature
  - name: RODS_POS_ACTUAL
    unique_id: rods_pos_actual
    state: "{{ state_attr('sensor.ws','values').RODS_POS_ACTUAL }}"
    unit_of_measurement: "%"
  - name: RODS_POS_ORDERED
    unique_id: rods_pos_ordered
    state: "{{ state_attr('sensor.ws','values').RODS_POS_ORDERED }}"
    unit_of_measurement: "%"
  - name: RODS_POS_REACHED
    unique_id: rods_pos_reached
    state: "{{ state_attr('sensor.ws','values').RODS_POS_REACHED }}"
    unit_of_measurement: "%"
  - name: RODS_QUANTITY
    unique_id: rods_quantity
    state: "{{ state_attr('sensor.ws','values').RODS_QUANTITY }}"
  - name: RODS_STATUS
    unique_id: rods_status
    state: "{{ state_attr('sensor.ws','values').RODS_STATUS }}"
  - name: RODS_TEMPERATURE
    unique_id: rods_temperature
    state: "{{ state_attr('sensor.ws','values').RODS_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: STEAM_GEN_0_EVAPORATED
    unique_id: steam_gen_0_evaporated
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_EVAPORATED }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_0_TEMP_OF_EVAPORATION
    unique_id: STEAM_GEN_0_TEMP_OF_EVAPORATION
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_TEMP_OF_EVAPORATION }}"
    unit_of_measurement: Â°C
  - name: STEAM_GEN_0_BOILING_POINT
    unique_id: STEAM_GEN_0_BOILING_POINT
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_BOILING_POINT }}"
    unit_of_measurement: Â°C
  - name: STEAM_GEN_0_INLET
    unique_id: steam_gen_0_inlet
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_INLET }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_0_OUTLET
    unique_id: steam_gen_0_outlet
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_OUTLET }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_0_RETURN_FLOW_PLUS_CONDENSED
    unique_id: steam_gen_0_return_flow_plus_condensed
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_RETURN_FLOW_PLUS_CONDENSED }}"
    unit_of_measurement: "L/min"
  - name: STEAM_GEN_1_EVAPORATED
    unique_id: steam_gen_1_evaporated
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_EVAPORATED }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_1_TEMP_OF_EVAPORATION
    unique_id: STEAM_GEN_1_TEMP_OF_EVAPORATION
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_TEMP_OF_EVAPORATION }}"
    unit_of_measurement: Â°C
  - name: STEAM_GEN_1_BOILING_POINT
    unique_id: STEAM_GEN_1_BOILING_POINT
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_BOILING_POINT }}"
    unit_of_measurement: Â°C
  - name: STEAM_GEN_1_INLET
    unique_id: steam_gen_1_inlet
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_INLET }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_1_OUTLET
    unique_id: steam_gen_1_outlet
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_OUTLET }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_1_RETURN_FLOW_PLUS_CONDENSED
    unique_id: steam_gen_1_return_flow_plus_condensed
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_RETURN_FLOW_PLUS_CONDENSED }}"
    unit_of_measurement: "L/min"
  - name: STEAM_GEN_2_EVAPORATED
    unique_id: steam_gen_2_evaporated
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_EVAPORATED }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_2_TEMP_OF_EVAPORATION
    unique_id: STEAM_GEN_2_TEMP_OF_EVAPORATION
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_TEMP_OF_EVAPORATION }}"
    unit_of_measurement: Â°C
  - name: STEAM_GEN_2_BOILING_POINT
    unique_id: STEAM_GEN_2_BOILING_POINT
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_BOILING_POINT }}"
    unit_of_measurement: Â°C
  - name: STEAM_GEN_2_INLET
    unique_id: steam_gen_2_inlet
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_INLET }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_2_OUTLET
    unique_id: steam_gen_2_outlet
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_OUTLET }}"
    unit_of_measurement: L/min
  - name: STEAM_GEN_2_RETURN_FLOW_PLUS_CONDENSED
    unique_id: steam_gen_2_return_flow_plus_condensed
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_RETURN_FLOW_PLUS_CONDENSED }}"
    unit_of_measurement: "L/min"
  - name: STEAM_TURBINE_0_BYPASS_ACTUAL
    unique_id: steam_turbine_0_bypass_actual
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_0_BYPASS_ACTUAL }}"
  - name: STEAM_TURBINE_0_PRESSURE
    unique_id: steam_turbine_0_pressure
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_0_PRESSURE }}"
    unit_of_measurement: bar
  - name: STEAM_TURBINE_0_RPM
    unique_id: steam_turbine_0_rpm
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_0_RPM }}"
    unit_of_measurement: rpm
  - name: STEAM_TURBINE_0_TEMPERATURE
    unique_id: steam_turbine_0_temperature
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_0_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: STEAM_TURBINE_1_BYPASS_ACTUAL
    unique_id: steam_turbine_1_bypass_actual
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_1_BYPASS_ACTUAL }}"
  - name: STEAM_TURBINE_1_PRESSURE
    unique_id: steam_turbine_1_pressure
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_1_PRESSURE }}"
    unit_of_measurement: bar
  - name: STEAM_TURBINE_1_RPM
    unique_id: steam_turbine_1_rpm
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_1_RPM }}"
    unit_of_measurement: rpm
  - name: STEAM_TURBINE_1_TEMPERATURE
    unique_id: steam_turbine_1_temperature
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_1_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: STEAM_TURBINE_2_BYPASS_ACTUAL
    unique_id: steam_turbine_2_bypass_actual
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_2_BYPASS_ACTUAL }}"
  - name: STEAM_TURBINE_2_PRESSURE
    unique_id: steam_turbine_2_pressure
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_2_PRESSURE }}"
    unit_of_measurement: bar
  - name: STEAM_TURBINE_2_RPM
    unique_id: steam_turbine_2_rpm
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_2_RPM }}"
    unit_of_measurement: rpm
  - name: STEAM_TURBINE_2_TEMPERATURE
    unique_id: steam_turbine_2_temperature
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_2_TEMPERATURE }}"
    device_class: temperature
    unit_of_measurement: Â°C
  - name: TIME
    unique_id: time
    state: "{{ state_attr('sensor.ws','values').TIME }}"
  - name: TIME_DAY
    unique_id: time_day
    state: "{{ state_attr('sensor.ws','values').TIME_DAY }}"
  - name: TIME_STAMP
    unique_id: time_stamp
    state: "{{ state_attr('sensor.ws','values').TIME_STAMP }}"
  - name: VALVE_M01_OPEN
    unique_id: valve_m01_open
    state: "{{ state_attr('sensor.ws','values').VALVE_M01_OPEN }}"
  - name: VALVE_M02_OPEN
    unique_id: valve_m02_open
    state: "{{ state_attr('sensor.ws','values').VALVE_M02_OPEN }}"
  - name: VALVE_M03_OPEN
    unique_id: valve_m03_open
    state: "{{ state_attr('sensor.ws','values').VALVE_M03_OPEN }}"
  - name: CHEMICAL_DOSING_PUMP_STATUS
    unique_id: CHEMICAL_DOSING_PUMP_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_DOSING_PUMP_STATUS }}"
  - name: CHEMICAL_DOSING_PUMP_DRY_STATUS
    unique_id: CHEMICAL_DOSING_PUMP_DRY_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_DOSING_PUMP_DRY_STATUS }}"
  - name: CHEMICAL_DOSING_PUMP_OVERLOAD_STATUS
    unique_id: CHEMICAL_DOSING_PUMP_OVERLOAD_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_DOSING_PUMP_OVERLOAD_STATUS }}"
  - name: CHEMICAL_FILTER_PUMP_STATUS
    unique_id: CHEMICAL_FILTER_PUMP_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_FILTER_PUMP_STATUS }}"
  - name: CHEMICAL_FILTER_PUMP_DRY_STATUS
    unique_id: CHEMICAL_FILTER_PUMP_DRY_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_FILTER_PUMP_DRY_STATUS }}"
  - name: CHEMICAL_FILTER_PUMP_OVERLOAD_STATUS
    unique_id: CHEMICAL_FILTER_PUMP_OVERLOAD_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_FILTER_PUMP_OVERLOAD_STATUS }}"
  - name: CHEMICAL_CLEANING_PUMP_STATUS
    unique_id: CHEMICAL_CLEANING_PUMP_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_CLEANING_PUMP_STATUS }}"
  - name: CHEMICAL_CLEANING_PUMP_DRY_STATUS
    unique_id: CHEMICAL_CLEANING_PUMP_DRY_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_CLEANING_PUMP_DRY_STATUS }}"
  - name: CHEMICAL_CLEANING_PUMP_OVERLOAD_STATUS
    unique_id: CHEMICAL_CLEANING_PUMP_OVERLOAD_STATUS
    state: "{{ state_attr('sensor.ws','values').CHEMICAL_CLEANING_PUMP_OVERLOAD_STATUS }}"
  - name: STEAM_GEN_0_STATUS
    unique_id: STEAM_GEN_0_STATUS
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_0_STATUS }}"
  - name: STEAM_GEN_1_STATUS
    unique_id: STEAM_GEN_1_STATUS
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_1_STATUS }}"
  - name: STEAM_GEN_2_STATUS
    unique_id: STEAM_GEN_2_STATUS
    state: "{{ state_attr('sensor.ws','values').STEAM_GEN_2_STATUS }}"
  - name: STEAM_TURBINE_0_INSTALLED
    unique_id: TSTEAM_URBINE_0_INSTALLED
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_0_INSTALLED }}"
  - name: STEAM_TURBINE_1_INSTALLED
    unique_id: STEAM_TURBINE_1_INSTALLED
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_1_INSTALLED }}"
  - name: STEAM_TURBINE_2_INSTALLED
    unique_id: STEAM_TURBINE_2_INSTALLED
    state: "{{ state_attr('sensor.ws','values').STEAM_TURBINE_2_INSTALLED }}"

  - name: CONDENSER_VACUUM_PUMP_POWER
    unique_id: CONDENSER_VACUUM_PUMP_POWER
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VACUUM_PUMP_POWER }}"
  - name: CONDENSER_VACUUM_PUMP_MODE
    unique_id: CONDENSER_VACUUM_PUMP_MODE
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VACUUM_PUMP_MODE }}"
  - name: CONDENSER_VACUUM
    unique_id: CONDENSER_VACUUM
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VACUUM }}"
  - name: CONDENSER_VACUUM_RELIEF_VALVE_OPENING
    unique_id: CONDENSER_VACUUM_RELIEF_VALVE_OPENING
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VACUUM_RELIEF_VALVE_OPENING }}"
  - name: CONDENSER_VACUUM_PUMP_ACTIVE
    unique_id: CONDENSER_VACUUM_PUMP_ACTIVE
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VACUUM_PUMP_ACTIVE }}"
  - name: STEAM_EJECTOR_MOTIVE
    unique_id: STEAM_EJECTOR_MOTIVE
    state: "{{ state_attr('sensor.ws','values').STEAM_EJECTOR_MOTIVE }}"
  - name: CONDENSER_CONDENSATE_FLOW_RATE
    unique_id: CONDENSER_CONDENSATE_FLOW_RATE
    state: "{{ state_attr('sensor.ws','values').CONDENSER_CONDENSATE_FLOW_RATE }}"
    unit_of_measurement: kg/sec
  - name: AMBIENT_TEMPERATURE
    unique_id: AMBIENT_TEMPERATURE
    state: "{{ state_attr('sensor.ws','values').AMBIENT_TEMPERATURE }}"
    unit_of_measurement: Â°C

  - name: TanqueDeRetencionCondensador
    unique_id: TanqueDeRetencionCondensador
    state: "{{ state_attr('sensor.valve_panel_json_2','vessels').TanqueDeRetencionCondensador.Volume[0] }}"
    unit_of_measurement: L
  - name: VALVULA_VENTEO_TANQUE_RETENCION
    unique_id: VALVULA_VENTEO_TANQUE_RETENCION
    state: "{{ state_attr('sensor.valve_panel_json_1','valves').VALVULA_VENTEO_TANQUE_RETENCION.Value }}"
  - name: VALVULA_ENTRADA_EJECTOR_EVA
    unique_id: VALVULA_ENTRADA_EJECTOR_EVA
    state: "{{ state_attr('sensor.valve_panel_json_1','valves').VALVULA_ENTRADA_EJECTOR_EVA.Value }}"
  - name: VALVULA_ENTRADA_EJECTOR_TUR
    unique_id: VALVULA_ENTRADA_EJECTOR_TUR
    state: "{{ state_attr('sensor.valve_panel_json_1','valves').VALVULA_ENTRADA_EJECTOR_TUR.Value }}"
  - name: VALVULA_RETORNO_CONDENSADOR
    unique_id: VALVULA_RETORNO_CONDENSADOR
    state: "{{ state_attr('sensor.valve_panel_json_1','valves').VALVULA_RETORNO_CONDENSADOR.Value }}"

  - name: CONDENSER_VAPOR_VOLUME
    unique_id: CONDENSER_VAPOR_VOLUME
    state: "{{ state_attr('sensor.ws','values').CONDENSER_VAPOR_VOLUME }}"
    unit_of_measurement: kg
  - name: STEAM_GEN_2_VAPOR_VOLUME
    unique_id: STEAM_GEN_2_VAPOR_VOLUME
    state:  "{{ state_attr('sensor.ws','values').COOLANT_SEC_2_VOLUME - state_attr('sensor.ws','values').COOLANT_SEC_2_LIQUID_VOLUME }}"
    unit_of_measurement: L
  - name: CONDENSER_TOTAL_VOLUME
    unique_id: CONDENSER_TOTAL_VOLUME
    state:  "{{ state_attr('sensor.ws','values').CONDENSER_VOLUME + state_attr('sensor.ws','values').CONDENSER_VAPOR_VOLUME }}"
    unit_of_measurement: L
  - name: TOTAL_LIQUID_VOLUME
    unique_id: TOTAL_LIQUID_VOLUME
    state:  "{{ states('sensor.COOLANT_SEC_2_LIQUID_VOLUME') | float + states('sensor.CONDENSER_VOLUME') | float + states('sensor.TanqueDeRetencionCondensador') | float(0) }}"
    unit_of_measurement: L
  - name: TOTAL_VAPOR_VOLUME
    unique_id: TOTAL_VAPOR_VOLUME
    state:  "{{ states('sensor.STEAM_GEN_2_VAPOR_VOLUME') | float + states('sensor.CONDENSER_VAPOR_VOLUME') | float }}"
    unit_of_measurement: kg
  - name: TOTAL_SYSTEM_VOLUME
    unique_id: TOTAL_SYSTEM_VOLUME
    state:  "{{ states('sensor.TOTAL_VAPOR_VOLUME') | float + states('sensor.TOTAL_LIQUID_VOLUME') | float }}"
    unit_of_measurement: kg|L

  - name: Vacuum Pump State
    unit_of_measurement: "%"
    state: >
      {% set value = 0 %}     
      {% if states('sensor.condenser_vacuum_pump_active') == "False" %} {% set value = 0 %}
      {% elif states('sensor.condenser_vacuum_pump_mode') == "STARTUP" %} {% set value = 100 %}
      {% elif states('sensor.condenser_vacuum_pump_mode') == "OPERACIONAL" %} {% set value = 50 %}
      {% endif %}
      {{ value | int }}

